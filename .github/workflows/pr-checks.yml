name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-checks:
    name: PR Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check Prettier formatting
        run: npm run format:check

      - name: Run ESLint
        run: npm run lint

      - name: Run unit tests
        run: npm test

      - name: Generate test coverage
        run: npm run test:coverage

      - name: Comment PR with coverage
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const coveragePath = path.join(process.cwd(), 'coverage', 'lcov-report', 'index.html');
              if (fs.existsSync(coveragePath)) {
                const coverage = fs.readFileSync(coveragePath, 'utf8');
                const match = coverage.match(/<div class="pad1">(.*?)<\/div>/s);
                if (match) {
                  const coverageText = match[1].replace(/<[^>]*>/g, '').trim();
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: `## ðŸ“Š Test Coverage Report\n\n\`\`\`\n${coverageText}\n\`\`\`\n\nâœ… All quality checks passed!`
                  });
                }
              }
            } catch (error) {
              console.log('Could not read coverage report:', error.message);
            }
